@using LNP.Core.DTOs
<div class="col-md-9 products-container">
    @{
        var groupedProducts = ViewBag.GroupedProducts as List<GroupedProductsDto>;
    }

    @if (groupedProducts == null || groupedProducts.Count == 0)
    {
        <div class="alert alert-info text-center p-4 rounded-lg shadow-sm">
            <i class="fas fa-exclamation-circle fa-2x mb-2"></i>
            <h4>Товары не найдены</h4>
            <p class="mb-0">В данный момент товары отсутствуют в этой категории.</p>
        </div>
    }
    else
    {
        <div class="categories-wrapper">
            @foreach (var group in groupedProducts)
            {
                <div class="category-section mb-5">
                    <div class="category-header d-flex justify-content-between align-items-center mb-3">
                        <h3 class="category-title">@group.Category.Name</h3>
                        <a href="@Url.Action("Index", "Catalog", new { categoryId = group.Category.Id })" class="view-all-link">
                            Смотреть все <i class="fas fa-arrow-right ml-1"></i>
                        </a>
                    </div>
                    <div class="row products-row">
                        @foreach (var product in group.Products)
                        {
                            <div class="col-md-4 mb-4 product-column">
                                <div class="product-card h-100">
                                    <div class="product-image-container">
                                        <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? "/Content/images/placeholder.jpg" : product.ImageUrl)"
                                             class="product-image" alt="@product.Name">
                                        <div class="product-overlay">
                                            <a href="@Url.Action("Details", "Catalog", new { id = product.Id })"
                                               class="btn btn-view">
                                                <i class="fas fa-eye mr-1"></i> Просмотр
                                            </a>

                                            @using (Html.BeginForm("AddItem", "Cart", FormMethod.Post, new { @class = "d-inline" }))
                                            {
                                                @Html.Hidden("id", product.Id)
                                                <button type="submit" class="btn btn-cart">
                                                    <i class="fas fa-shopping-cart mr-1"></i> В корзину
                                                </button>
                                            }
                                        </div>
                                    </div>
                                    <div class="product-info">
                                        <h5 class="product-title">@product.Name</h5>
                                        <p class="product-description">@(product.Description?.Length > 100 ? product.Description.Substring(0, 100) + "..." : product.Description)</p>
                                        <div class="d-flex justify-content-between align-items-center mt-2">
                                            <span class="product-price">@product.Price.ToString("C")</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>

<style>
    .products-container {
        padding-bottom: 100px;
        min-height: 500px;
        overflow: visible;
    }

    .categories-wrapper {
        width: 100%;
        overflow: visible;
        position: relative;
        padding-bottom: 30px;
    }

    .category-section {
        margin-bottom: 3rem;
        width: 100%;
        clear: both;
    }

    .products-row {
        display: flex;
        flex-wrap: wrap;
        margin-right: -15px;
        margin-left: -15px;
        width: calc(100% + 30px);
    }

    .product-column {
        display: flex;
        padding-right: 15px;
        padding-left: 15px;
        margin-bottom: 30px;
        width: 100%;
    }

    @@media (min-width: 768px) {
    .product-column {
        flex: 0 0 33.333333%;
        max-width: 33.333333%;
    }
    }

    .category-title {
        color: #000;
        font-weight: 600;
        position: relative;
        padding-bottom: 0.5rem;
        margin-bottom: 0;
    }

    .category-title:after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 50px;
        height: 3px;
        background-color: #000080;
    }

    .category-header {
        border-bottom: 1px solid #e0e0e0;
        padding-bottom: 0.75rem;
        margin-bottom: 1.5rem;
        width: 100%;
    }

    .view-all-link {
        color: #000080;
        font-weight: 500;
        text-decoration: none;
        transition: all 0.2s ease;
    }

    .view-all-link:hover {
        color: #000;
    }

    .product-card {
        border: none;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        background-color: #fff;
        width: 100%;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    .product-image-container {
        position: relative;
        height: 240px;
        overflow: hidden;
        flex-shrink: 0;
    }

    .product-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.5s ease;
    }

    .product-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 10px;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .product-card:hover .product-overlay {
        opacity: 1;
    }

    .btn-view, .btn-cart {
        padding: 8px 16px;
        border-radius: 4px;
        font-weight: 500;
        transition: all 0.2s ease;
    }

    .btn-view {
        background-color: #000080;
        color: white;
    }

    .btn-view:hover {
        background-color: #000066;
    }

    .btn-cart {
        background-color: white;
        color: #000;
    }

    .btn-cart:hover {
        background-color: #f0f0f0;
    }

    .product-info {
        padding: 1.25rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
    }

    .product-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #000;
        font-size: 1.1rem;
    }

    .product-description {
        color: #666;
        font-size: 0.9rem;
        margin-bottom: 0.75rem;
        line-height: 1.5;
        height: 4rem;
        overflow: hidden;
        flex-grow: 1;
    }

    .product-price {
        font-weight: 700;
        color: #000080;
        font-size: 1.1rem;
    }

    @@media (max-width: 767px) {
    .product-column {
        margin-bottom: 1.5rem;
        flex: 0 0 100%;
        max-width: 100%;
    }

    .product-image-container {
        height: 200px;
    }

    .products-container {
        padding-bottom: 80px;
    }
    }
</style>