@model LNP.Core.DTOs.ProductDto
@using LNP.Core.DTOs

<div class="container py-5">
    <div class="product-details">
        <div class="row g-0">
            <!-- Breadcrumb navigation -->
            

            <!-- Product image -->
            <div class="col-lg-6 mb-4 mb-lg-0">
                <div class="product-image-wrapper">
                    <div class="product-image-container">
                        <img src="@(string.IsNullOrEmpty(Model.ImageUrl) ? "/Content/images/placeholder.jpg" : Model.ImageUrl)"
                             class="img-fluid" alt="@Model.Name">
                    </div>
                </div>
            </div>

            <!-- Product information -->
            <div class="col-lg-6">
                <div class="product-info-container">
                    <h1 class="product-title">@Model.Name</h1>

                    <div class="product-meta">
                        <div class="product-price">@Model.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-US"))</div>
                        <div class="stock-status">
                            <i class="fas fa-check-circle"></i>
                            <span>В наличии</span>
                        </div>
                    </div>

                    <div class="product-divider"></div>

                    <!-- Quantity selector -->
                    <div class="quantity-section">
                        <label class="quantity-label">Количество:</label>
                        <div class="quantity-control">
                            <button class="quantity-btn" type="button" onclick="adjustQuantity(-1)">
                                <i class="fas fa-minus"></i>
                            </button>
                            <input type="number" id="quantity" name="quantity" value="1" min="1"
                                   class="quantity-input" readonly>
                            <button class="quantity-btn" type="button" onclick="adjustQuantity(1)">
                                <i class="fas fa-plus"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Action buttons -->
                    <div class="product-actions">
                        @using (Html.BeginForm("AddAndCheckout", "Cart", FormMethod.Post))
                        {
                            @Html.Hidden("id", Model.Id)
                            <input type="hidden" name="quantity" id="quantityInputCheckout" value="1">
                            <button type="submit" class="btn-buy">
                                <i class="fas fa-credit-card"></i>
                                <span>Купить сейчас</span>
                            </button>
                        }
                        @using (Html.BeginForm("AddItem", "Cart", FormMethod.Post))
                        {
                            @Html.Hidden("id", Model.Id)
                            <input type="hidden" name="quantity" id="quantityInput" value="1">
                            <button type="submit" class="btn-cart">
                                <i class="fas fa-shopping-cart"></i>
                                <span>В корзину</span>
                            </button>
                        }
                    </div>

                    <div class="product-divider"></div>

                    <!-- Product description -->
                    <div class="product-description">
                        <h4 class="description-title">Описание</h4>
                        <p class="description-text">@Model.Description</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Product Details Page Styling */
    .product-details {
        background: #fff;
        border: 1px solid #e5e5e5;
        box-shadow: 0 6px 30px rgba(0,0,0,0.06);
        margin-top: 2rem;
        overflow: hidden;
    }

    /* Breadcrumb styling */
    .breadcrumb {
        background: transparent;
        padding: 0 2rem;
        margin-bottom: 0;
        font-size: 0.85rem;
    }

    .breadcrumb-item a {
        color: #000080;
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .breadcrumb-item a:hover {
        color: #000066;
        text-decoration: underline;
    }

    .breadcrumb-item.active {
        color: #6c757d;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: "•";
        color: #6c757d;
    }

    /* Product image styling */
    .product-image-wrapper {
        padding: 2rem;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f9f9f9;
    }

    .product-image-container {
        position: relative;
        width: 100%;
        padding-top: 100%;
        overflow: hidden;
    }

    .product-image-container img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: contain;
        transition: transform 0.5s ease;
    }

    .product-image-container:hover img {
        transform: scale(1.05);
    }

    /* Product info container */
    .product-info-container {
        padding: 2.5rem;
        height: 100%;
        display: flex;
        flex-direction: column;
    }

    /* Product title and meta */
    .product-title {
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        color: #000080;
        font-size: 2.25rem;
        margin-bottom: 1.5rem;
        line-height: 1.2;
        letter-spacing: -0.5px;
    }

    .product-meta {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .product-price {
        color: #000080;
        font-weight: 700;
        font-size: 1.75rem;
        margin-right: 1.5rem;
    }

    /* Stock status */
    .stock-status {
        display: flex;
        align-items: center;
        font-weight: 500;
        color: #28a745;
    }

    .stock-status i {
        margin-right: 0.5rem;
    }

    /* Divider */
    .product-divider {
        height: 1px;
        background-color: #e5e5e5;
        width: 100%;
        margin: 1.5rem 0;
    }

    /* Quantity selector */
    .quantity-section {
        margin-bottom: 2rem;
    }

    .quantity-label {
        display: block;
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: #000080;
        font-size: 0.95rem;
    }

    .quantity-control {
        display: inline-flex;
        align-items: center;
        border: 1px solid #e5e5e5;
        border-radius: 4px;
        overflow: hidden;
    }

    .quantity-btn {
        background: transparent;
        border: none;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #000080;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .quantity-btn:hover {
        background-color: #f5f5f5;
    }

    .quantity-input {
        width: 60px;
        height: 40px;
        border: none;
        border-left: 1px solid #e5e5e5;
        border-right: 1px solid #e5e5e5;
        text-align: center;
        font-weight: 600;
        color: #000080;
    }

    .quantity-input:focus {
        outline: none;
    }

    /* Action buttons */
    .product-actions {
        display: flex;
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .btn-buy, .btn-cart {
        padding: 0.875rem 1.5rem;
        font-weight: 600;
        font-size: 0.95rem;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-buy {
        background-color: #000080;
        color: white;
        border: none;
        flex: 2;
    }

    .btn-buy:hover {
        background-color: #000066;
    }

    .btn-cart {
        background-color: transparent;
        color: #000080;
        border: 1px solid #000080;
        flex: 1;
    }

    .btn-cart:hover {
        background-color: rgba(0, 0, 128, 0.05);
    }

    .btn-buy i, .btn-cart i {
        margin-right: 0.75rem;
    }

    /* Product description */
    .product-description {
        margin-top: 0.5rem;
    }

    .description-title {
        font-family: 'Playfair Display', serif;
        font-weight: 700;
        color: #000080;
        font-size: 1.25rem;
        margin-bottom: 1rem;
    }

    .description-text {
        color: #555;
        line-height: 1.8;
        font-size: 0.95rem;
    }
    /* Добавьте анимацию для кнопок */
    .btn-buy, .btn-cart {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .btn-buy:active, .btn-cart:active {
        transform: translateY(2px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
    }

    /* Добавьте состояние загрузки */
    .btn-loading {
        position: relative;
        pointer-events: none;
    }

    .btn-loading:after {
        content: "";
        position: absolute;
        width: 16px;
        height: 16px;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        border: 3px solid transparent;
        border-top-color: #fff;
        border-radius: 50%;
        animation: spin 0.8s linear infinite;
    }

    /* Responsive adjustments */
    @@media (max-width: 991px) {
    .product-image-wrapper {
        padding: 1.5rem;
    }

    .product-info-container {
        padding: 1.5rem;
    }

    .product-title {
        font-size: 1.75rem;
    }

    .product-price {
        font-size: 1.5rem;
    }
    }

    @@media (max-width: 767px) {
    .product-actions {
        flex-direction: column;
    }

    .btn-buy, .btn-cart {
        width: 100%;
    }
    }
</style>

<script>
    function adjustQuantity(change) {
        const input = document.getElementById('quantity');
        let newValue = parseInt(input.value) + change;
        if (newValue < 1) newValue = 1;
        input.value = newValue;
        document.getElementById('quantityInput').value = newValue;

        // Update the quantity in the "Add to Cart" link
        
        const addToCartBtn = document.getElementById('addToCartBtn');
        const currentHref = addToCartBtn.getAttribute('href');
        const baseUrl = currentHref.split('&')[0];
        const newHref = `${baseUrl}&quantity=${newValue}`;
        addToCartBtn.setAttribute('href', newHref);
    }
</script>
